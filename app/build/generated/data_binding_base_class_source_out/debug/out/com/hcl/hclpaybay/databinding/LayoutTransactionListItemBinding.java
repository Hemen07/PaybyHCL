// Generated by view binder compiler. Do not edit!
package com.hcl.hclpaybay.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.hcl.hclpaybay.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LayoutTransactionListItemBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageView ivTransactionType;

  @NonNull
  public final TextView tvAmountSent;

  @NonNull
  public final TextView tvBankName;

  @NonNull
  public final TextView tvBeneName;

  private LayoutTransactionListItemBinding(@NonNull RelativeLayout rootView,
      @NonNull ImageView ivTransactionType, @NonNull TextView tvAmountSent,
      @NonNull TextView tvBankName, @NonNull TextView tvBeneName) {
    this.rootView = rootView;
    this.ivTransactionType = ivTransactionType;
    this.tvAmountSent = tvAmountSent;
    this.tvBankName = tvBankName;
    this.tvBeneName = tvBeneName;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutTransactionListItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutTransactionListItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_transaction_list_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutTransactionListItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.iv_transaction_type;
      ImageView ivTransactionType = ViewBindings.findChildViewById(rootView, id);
      if (ivTransactionType == null) {
        break missingId;
      }

      id = R.id.tv_amount_sent;
      TextView tvAmountSent = ViewBindings.findChildViewById(rootView, id);
      if (tvAmountSent == null) {
        break missingId;
      }

      id = R.id.tv_bank_name;
      TextView tvBankName = ViewBindings.findChildViewById(rootView, id);
      if (tvBankName == null) {
        break missingId;
      }

      id = R.id.tv_bene_name;
      TextView tvBeneName = ViewBindings.findChildViewById(rootView, id);
      if (tvBeneName == null) {
        break missingId;
      }

      return new LayoutTransactionListItemBinding((RelativeLayout) rootView, ivTransactionType,
          tvAmountSent, tvBankName, tvBeneName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
